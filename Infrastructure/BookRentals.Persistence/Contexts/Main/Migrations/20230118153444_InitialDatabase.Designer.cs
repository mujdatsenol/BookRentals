// <auto-generated />
using System;
using BookRentals.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookRentals.Persistence.Contexts.Main.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20230118153444_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookRentals.Domain.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Isbn")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Rented")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbae6962-99ed-430d-a16e-43fd36c069e4"),
                            Author = "Mustafa Kemal Atatürk",
                            Isbn = 9.0999999999999996,
                            Name = "Nutuk",
                            Rented = false
                        },
                        new
                        {
                            Id = new Guid("df532ae2-e6cc-494f-9472-e78a6d72705e"),
                            Author = "Zülfü Livaneli",
                            Isbn = 8.5,
                            Name = "Balıkçı ve Oğlu",
                            Rented = true
                        },
                        new
                        {
                            Id = new Guid("b24161c4-32e7-4208-96ae-a3a3d68bca16"),
                            Author = "James Wallman",
                            Isbn = 7.9000000000000004,
                            Name = "İstif Çağı",
                            Rented = false
                        },
                        new
                        {
                            Id = new Guid("57fd2c45-4343-4a3b-b702-88b94e691d25"),
                            Author = "Madeline Miller",
                            Isbn = 8.1999999999999993,
                            Name = "Ben Kirke",
                            Rented = true
                        },
                        new
                        {
                            Id = new Guid("b9548607-acb9-444b-9dae-8330199e420b"),
                            Author = "Fyodor Mihailoviç Dostoyevski",
                            Isbn = 9.5,
                            Name = "Suç ve Ceza",
                            Rented = true
                        },
                        new
                        {
                            Id = new Guid("e14159be-759f-4e4f-9b69-8ac738a86891"),
                            Author = "Fyodor Mihailoviç Dostoyevski",
                            Isbn = 7.0,
                            Name = "Amcamın Rüyası",
                            Rented = false
                        },
                        new
                        {
                            Id = new Guid("659056f9-6bef-4a9a-8b98-906babd4179c"),
                            Author = "Jose Mauro De Vasconcelos",
                            Isbn = 9.3000000000000007,
                            Name = "Şeker Portakalı",
                            Rented = false
                        },
                        new
                        {
                            Id = new Guid("cdb1d571-d693-4dc5-aeca-d0a8f036ef6e"),
                            Author = "Sabahattin Ali",
                            Isbn = 9.0999999999999996,
                            Name = "Kürk Mantolu Madonna",
                            Rented = true
                        },
                        new
                        {
                            Id = new Guid("51036971-8a19-43a4-ae77-b250b488838f"),
                            Author = "Kahraman Tazeoğlu",
                            Isbn = 7.4000000000000004,
                            Name = "Yalnızım Çünkü Sen Varsın",
                            Rented = true
                        },
                        new
                        {
                            Id = new Guid("04faa393-8bea-4196-9e37-ddf1c5382da1"),
                            Author = "Khaled Hosseini",
                            Isbn = 9.1999999999999993,
                            Name = "Uçurtma Avcısı",
                            Rented = false
                        });
                });

            modelBuilder.Entity("BookRentals.Domain.BookTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("MemberId");

                    b.ToTable("BookTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db3fbf6c-33e3-4dbf-b683-8b8739f3213d"),
                            BookId = new Guid("df532ae2-e6cc-494f-9472-e78a6d72705e"),
                            MemberId = new Guid("5b5aba2c-068c-4850-86ab-a4e2eca325ed"),
                            RentDate = new DateTime(2022, 12, 14, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2358),
                            ReturnDate = new DateTime(2023, 1, 17, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2367)
                        },
                        new
                        {
                            Id = new Guid("3ae4fff7-9b5b-43bd-9238-1ed332c42025"),
                            BookId = new Guid("57fd2c45-4343-4a3b-b702-88b94e691d25"),
                            MemberId = new Guid("06500dc8-f77b-417d-bb5d-0d6ac7e3661a"),
                            RentDate = new DateTime(2023, 1, 24, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2374),
                            ReturnDate = new DateTime(2023, 1, 16, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2375)
                        },
                        new
                        {
                            Id = new Guid("2f8e4e94-8ef1-4ab3-afc9-963c600817b3"),
                            BookId = new Guid("b9548607-acb9-444b-9dae-8330199e420b"),
                            MemberId = new Guid("284e5ea4-32da-4643-84b9-b7a889f9fe78"),
                            RentDate = new DateTime(2023, 1, 25, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2379),
                            ReturnDate = new DateTime(2023, 2, 20, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2379)
                        },
                        new
                        {
                            Id = new Guid("4d2950e5-8377-434c-95ec-0bd9f259ff99"),
                            BookId = new Guid("cdb1d571-d693-4dc5-aeca-d0a8f036ef6e"),
                            MemberId = new Guid("0d3818c5-7c5e-4e12-ba06-7fb3b391c933"),
                            RentDate = new DateTime(2023, 1, 26, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2385),
                            ReturnDate = new DateTime(2023, 2, 20, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2386)
                        },
                        new
                        {
                            Id = new Guid("d7f57332-284a-4657-aaf9-b9facb65648d"),
                            BookId = new Guid("51036971-8a19-43a4-ae77-b250b488838f"),
                            MemberId = new Guid("5e9b7161-3bb9-4e02-bc5b-788925450042"),
                            RentDate = new DateTime(2023, 1, 27, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2389),
                            ReturnDate = new DateTime(2023, 2, 20, 18, 34, 44, 712, DateTimeKind.Local).AddTicks(2389)
                        });
                });

            modelBuilder.Entity("BookRentals.Domain.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b5aba2c-068c-4850-86ab-a4e2eca325ed"),
                            FirstName = "Ahmet",
                            IdentityNumber = "1",
                            LastName = "Ünlü"
                        },
                        new
                        {
                            Id = new Guid("06500dc8-f77b-417d-bb5d-0d6ac7e3661a"),
                            FirstName = "Hasan",
                            IdentityNumber = "2",
                            LastName = "Usta"
                        },
                        new
                        {
                            Id = new Guid("284e5ea4-32da-4643-84b9-b7a889f9fe78"),
                            FirstName = "Elif",
                            IdentityNumber = "3",
                            LastName = "Gül"
                        },
                        new
                        {
                            Id = new Guid("0d3818c5-7c5e-4e12-ba06-7fb3b391c933"),
                            FirstName = "Mehmet",
                            IdentityNumber = "4",
                            LastName = "Taşçı"
                        },
                        new
                        {
                            Id = new Guid("5e9b7161-3bb9-4e02-bc5b-788925450042"),
                            FirstName = "Melike",
                            IdentityNumber = "5",
                            LastName = "Gezer"
                        });
                });

            modelBuilder.Entity("BookRentals.Domain.BookTransaction", b =>
                {
                    b.HasOne("BookRentals.Domain.Book", "Book")
                        .WithMany("BookTransactions")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookRentals.Domain.Member", "Member")
                        .WithMany("BookTransactions")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("BookRentals.Domain.Book", b =>
                {
                    b.Navigation("BookTransactions");
                });

            modelBuilder.Entity("BookRentals.Domain.Member", b =>
                {
                    b.Navigation("BookTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
